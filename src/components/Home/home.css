.HomeSection {
    width: 100%;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}
img{
    object-fit: cover;
}
#HomeSection {
   flex-direction: column;
    /* background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, .8)), url('../Images/plants.jpg'); */
    background-size: cover;
    background-position: center;
    object-fit: cover;
}

#HomeSection h1 {
    font-size: 100px;
    color: #fff;
    letter-spacing: 3px;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    text-transform: uppercase;
    text-shadow: 0px 0px 0px #CCC,
        0px 2px 0px #CCC,
        0px 3px 0px #CCC,
        0px 4px 0px #CCC,
        0px 5px 0px #CCC,
        0px 6px 0px #CCC,
        0px 7px 0px #CCC;
}
#HomeSection p{
    color: #fff;
    font-size: 18px;
    font-family: cursive;
}

.login{
    background: green!important;
    color: #fff!important;
    box-shadow: 2px 4px 5px rgba(0,0,0,0.3);

}
@media (max-width:480px){
    #HomeSection h1 {
        font-size: 70px;
        color: #fff;
        letter-spacing: 2px;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
        text-transform: uppercase;
        align-items: center;
        justify-content: center;
        margin-top: 90px;
        text-shadow: 0px 0px 0px #CCC,
            0px 2px 0px #CCC,
            0px 3px 0px #CCC,
            0px 4px 0px #CCC,
            0px 5px 0px #CCC,
            0px 6px 0px #CCC,
            0px 7px 0px #CCC;
            
    }
    .HomeSection {
        width: 100%;
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    img{
        object-fit: cover;
    }
}
/* <div id='order' className='container my-5'>
<table className='w-100 '>
  <thead>
    <tr>
      <td>S.No</td>
      <td>Name</td>
      <td>Image</td>
      <td>Product Name</td>
      <td>Price</td>
      <td>City</td>
      <td>Pincode</td>
      <td>Delivery date</td>
      <td>Status</td>
      <td>Remove</td>
      <td>Action</td>



    </tr>
  </thead>
  <tbody>
    {orderlist && orderlist?.map((list,index) => {
      return <tr>
        <td>{list.index}</td>
        <td> {list?.address?.Name}</td>
        <td><img className='' height={"62px"} src={list?.Image} /></td>
        <td>{list?.productName}</td>
        <td>${list?.Offerprice}</td>
        <td> {list?.address?.City}</td>
        <td> {list?.address?.Pincode}</td>
        <td>{formatDate(addDaysToDate(list.createdAt))}</td>
        <td>{list?.Status}</td>
        <td> <button className="btn btn-sm text-danger mx-2" onClick={() => ondelete(list._id)}><i class="fa fa-trash-o" aria-hidden="true"></i></button>
        </td>
        <td> {user?.role === "admin" ? <button className='btn btn-sm  text-secondary mx-2' onClick={() => EditToggle(list)}> <i class="fa fa-pencil-square-o" aria-hidden="true"></i></button>
          : <a className='btn btn-sm text-success' onClick={() => Edittoggle(list)}>change address</a>}
        </td>
      </tr>
    })}
  </tbody>
</table>


<Modal isOpen={Deletemodal} toggle={() => setDeletemodal(!Deletemodal)}>
  <ModalHeader> Delete Confirmation</ModalHeader>
  <ModalBody>
    <div className="container">
      <p>
        Are you sure want to Delete this Order?
      </p>
      <div>
        <button className="btn btn-success mx-2" onClick={() => Deleteorder()}>Yes</button>

        <button className="btn btn-danger" onClick={() => cancelDelete()}>No</button>
      </div>
    </div>
  </ModalBody>
</Modal>
<Modal isOpen={EditAddressChange} toggle={() => setEditAddressChange(!EditAddressChange)} size='lg' centered>
  <ModalHeader toggle={() => setEditAddressChange(!EditAddressChange)}>Change your editaddress</ModalHeader>
  <ModalBody>
    <div className='container w-75 '>
      {/* <h1 className='text-center text-primary'>shop Name</h1> */

      /* <div className='row mt-5'>


        <div className='col-sm-12 col-md-6 col-sm-6'>
          <div class="mb-3 needs-validation" novalidate>
            <label class="form-label text-primary mx-2">Name

              <span className='mx-2' style={{ color: "red" }}></span></label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Name}
              onChange={(event) => handleChangeAdmins(event, "Name")}
            />
          </div>
        </div>

        <div className='col-sm-12 col-md-6 col-sm-6'>
          <div class="mb-3">
            <label class="form-label  text-primary">line 1
              <span className='mx-2' style={{ color: "red" }}>{ }</span>
            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Line1}
              onChange={(event) => handleChangeAdmins(event, "Line1")}
            />
          </div>
        </div>
        <div className='col-sm-12 col-md-6 col-sm-6'>
          <div class="mb-3">
            <label class="form-label  text-primary">line 2
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Line2}
              onChange={(event) => handleChangeAdmins(event, "Line2")}
            />
          </div>

        </div>
        <div className='col-sm-12 col-md-6 col-sm-6'>
          <div class="mb-3">
            <label class="form-label  text-primary">City
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.City}
              onChange={(event) => handleChangeAdmins(event, "City")}
            />
          </div>

        </div>
        <div className='col-sm-12 col-md-6 col-sm-6'>
          <div class="mb-3">
            <label class="form-label  text-primary">State
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.State}
              onChange={(event) => handleChangeAdmins(event, "State")}
            />
          </div>

        </div>
        <div className='col-sm-12 col-md-6 col-sm-6'>
          <div class="mb-3">
            <label class="form-label  text-primary">Country
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Country}
              onChange={(event) => handleChangeAdmins(event, "Country")}
            />
          </div>

        </div>
        <div className='col-sm-12 col-md-6 col-sm-6'>
          <div class="mb-3">
            <label class="form-label  text-primary">Pincode
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="number" class="form-control"
              value={EditAdmin.address?.Pincode}
              onChange={(event) => handleChangeAdmins(event, "Pincode")}
            />
          </div>

        </div>



      </div>

    </div>
  </ModalBody>
  <ModalFooter>
    <button className='btn btn-success' onClick={() => handleUpdateOrder()}>Update Address</button>
  </ModalFooter>
</Modal>
<Modal isOpen={EditAdminModal} toggle={() => setEditAdminModal(!EditAdminModal)} size='lg' centered>
  <ModalHeader toggle={() => setEditAdminModal(!EditAdminModal)}>Edit details</ModalHeader>
  <ModalBody>
    <div className='container w-75 '>
      <div className='row mt-5'>
        <div className='col-sm-12 col-md-4 col-lg-4'>
          <div class="mb-3">
            <label class="form-label text-primary mx-2">productName

            </label>
            <input type="text" class="form-control" name='productName'
              value={EditAdmin.productName}
              onChange={(event) => handleChangeAdmin(event, "productName")}
            />
          </div>
        </div>

        <div className='col-sm-12 col-md-4 col-lg-4'>
          <div class="mb-3">
            <label class="form-label  text-primary">Description

            </label>
            <input type="text" class="form-control"
              value={EditAdmin.Description}
              onChange={(event) => handleChangeAdmin(event, "Description")}
            />
          </div>
        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">Rating

            </label>
            <input type="number" class="form-control"
              value={EditAdmin.Rating}
              onChange={(event) => handleChangeAdmin(event, "Rating")}
            />
          </div>

        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">Price
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="number" class="form-control"
              value={EditAdmin.Price}
              onChange={(event) => handleChangeAdmin(event, "Price")}
            />
          </div>

        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">OfferPrice

            </label>
            <input type="number" class="form-control"
              value={EditAdmin.Offerprice}
              onChange={(event) => handleChangeAdmin(event, "Offerprice")}
            />
          </div>

        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3 needs-validation" novalidate>
            <label class="form-label text-primary mx-2">Name

            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Name}
              onChange={(event) => handleChangeAdmins(event, "Name")}
            />
          </div>
        </div>

        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">line 1

            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Line1}
              onChange={(event) => handleChangeAdmins(event, "Line1")}
            />
          </div>
        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">line 2

            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Line2}
              onChange={(event) => handleChangeAdmins(event, "Line2")}
            />
          </div>

        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">City

            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.City}
              onChange={(event) => handleChangeAdmins(event, "City")}
            />
          </div>

        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">State

            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.State}
              onChange={(event) => handleChangeAdmins(event, "State")}
            />
          </div>

        </div>

        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">Country
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="text" class="form-control"
              value={EditAdmin.address?.Country}
              onChange={(event) => handleChangeAdmins(event, "Country")}
            />
          </div>

        </div>
        <div className='col-md-4 col-lg-4 col-sm-12'>
          <div class="mb-3">
            <label class="form-label  text-primary">Pincode
              <span className='mx-2' style={{ color: "red" }}></span>
            </label>
            <input type="number" class="form-control"
              value={EditAdmin.address?.Pincode}
              onChange={(event) => handleChangeAdmins(event, "Pincode")}
            />
          </div>

        </div>
        <div className='col-sm-12 col-md-6 col-lg-6'>
          <div class="mb-3">
            <label class="form-label  text-primary">Status

            </label>
            <Select options={statusoption}
              value={statusoption.filter((list) => list.value === EditAdmin.Status)}
              onChange={(op) => setEditAdmin({ ...EditAdmin, Status: op.value })}

            />
          </div>

        </div> */




      /* </div>

    </div>

  </ModalBody>

  <ModalFooter><button className='btn btn-warning ' onClick={() => UpdateOrderAdmin()}>Update</button></ModalFooter>
</Modal>

</div> */ 